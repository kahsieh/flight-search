#!/usr/bin/env bash

# Five Peas Flight Search
# gen-airports.sh

# Copyright (c) 2020 Derek Chu, Kevin Hsieh, Leo Liu, Quentin Truong.
# All Rights Reserved.

echo '/*
Five Peas Flight Search
airports.js (generated by gen-airports.sh)

Copyright (c) 2020 Derek Chu, Kevin Hsieh, Leo Liu, Quentin Truong.
All Rights Reserved.
*/
"use strict";

/**
 * KV of airports for autocomplete.
 */
let airports = {'
(cat airports.csv 2>/dev/null || curl -s https://ourairports.com/data/airports.csv) |
  # (1) Convert all but the last column to TSV.
  # (2) Convert the last column to TSV.
  # (3) Replace "" with \".
  sed -E 's/("(([^"]|"")*)")?,/\2\t/g; s/("(([^"]|"")*)")?$/\2/; s/""/\\"/g' |
  # Print out rows that:
  # (1) are airports,
  # (2) have scheduled flights, and
  # (3) have an IATA code.
  awk -F '\t' '{
    if ($3 ~ /airport/ && $12 == "yes" && $14 != "") {
      print "  \""$4", "($11 == "" ? "" : $11", ")$9" - "$14"\": null,";
    }
  }'
echo '};

/**
 * Modifications to the list of airports.
 */
const exceptions = {
  "Bangkok (all airports), TH - BKK": null,
  "Beijing (all airports), CN - BJS": null,
  "Osaka (all airports), JP - OSA": null,
  "Sapporo (all airports), JP - SPK": null,
  "Seoul (all airports), KR - SEL": null,
  "Shanghai (all airports), CN - SHA": null,
  "Tokyo (all airports), JP - TYO": null,
  "Jakarta (all airports), ID - JKT": null,
  "Berlin (all airports), DE - BER": null,
  "Bucharest (all airports), RO - BUH": null,
  "Brussels (all airports), BE - BRU": null,
  "London (all airports), UK - LON": null,
  "Milan (all airports), IT - MIL": null,
  "Moscow (all airports), RU - MOW": null,
  "Oslo (all airports), NO - OSL": null,
  "Paris (all airports), FR - PAR": null,
  "Reykjavik (all airports), ID - REK": null,
  "Rome (all airports), IT - ROM": null,
  "Stockholm (all airports), SE - STO": null,
  "Tenerife (all airports), ES - TCI": null,
  "Chicago (all airports), US - CHI": null,
  "Dallas (all airports), US - DFW": null,
  "Detroit (all airports), US - DTT": null,
  "Edmonton (all airports), CA - YEA": null,
  "Houston (all airports), US - HOU": null,
  "Los Angeles (all airports), US - LAX": null,
  "Miami (all airports), US - QMI": null,
  "Montreal (all airports), CA - YMQ": null,
  "New York City (all airports), US - NYC": null,
  "Toronto (all airports), CA - YTO": null,
  "Washington DC (all airports), US - WAS": null,
  "Belo Horizonte (all airports), BR - BHZ": null,
  "Buenos Aires (all airports), AR - BUE": null,
  "Rio de Janeiro (all airports), BR - RIO": null,
  "SÃ£o Paulo (all airports), BR - SAO": null,
};

for (const key of Object.keys(exceptions)) {
  if (exceptions[key] === undefined) {
    delete airports[key];
  }
  else {
    airports[key] = exceptions[key];
  }
}

// Append to document as a datalist.
addEventListener("load", () => {
  let datalist = document.createElement("DATALIST");
  datalist.id = "airports";
  for (const key of Object.keys(airports)) {
    let option = document.createElement("OPTION");
    option.value = key;
    datalist.appendChild(option);
  }
  qs("body").appendChild(datalist);
});'
